
# # # # # # # # # # # # # # # # # # # # # # # # # #
# Plotting routines for stats generated by PyMLMC
# TODO: add paper, description and link
#
# Jonas Sukys
# CSE Lab, ETH Zurich, Switzerland
# sukys.jonas@gmail.com
# All rights reserved.
# # # # # # # # # # # # # # # # # # # # # # # # # #

# === global imports

import pylab
import numpy

styles = {}
styles ['mean']             = 'b-'
styles ['std. deviation']   = 'r--'
styles ['percentile']       = 'g--'

qoi = 'p_max'

def plot (stats, infolines=True, save='stats.pdf'):
  
  pylab.figure ( figsize = (8,6) )
  
  #TODO: infolines
  
  pylab.title ( 'estimated statistics for %s' % qoi )
  
  # plot each stat
  for name, stat in stats.iteritems():
    
    print name
    
    ts = numpy.array ( stat.meta ['t'] )
    vs = numpy.array ( stat.data [qoi] )
    
    style = styles [name] if name in styles else ''
    
    # stat-specific plotting
    if name == 'std. deviation' and 'mean' in stats:
      ms = numpy.array ( stats ['mean'] .data [qoi] )
      pylab.plot (ts, ms + vs, style, label='mean +/- std. dev.')
      pylab.plot (ts, ms - vs, style)
    
    # general plotting
    else:  
      pylab.plot (ts, vs, style, label=name)
  
  pylab.legend (loc='best')
  pylab.savefig (save)
  pylab.show ()
